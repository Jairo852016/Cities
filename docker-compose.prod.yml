# docker-compose.yml

version: "3.8"

services:

  database:
    container_name: db-pro
    environment:
      - POSTGRES_DB=cities
      - POSTGRES_USER=jairo
      - POSTGRES_PASSWORD=jairo
    image: postgres:14.1
    ports:
      - "5433:5432"
    volumes:
      - database-prod:/var/lib/postgresql/data

  elasticsearch:
    container_name: elasticsearch-prod
    environment:
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - bootstrap.memory_lock=true
      - discovery.type=single-node
    image: elasticsearch:7.14.2
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-prod:/usr/share/elasticsearch/data

  server:
    build:
      context: ./server
    container_name: server-prod
    depends_on:
      - database
      - elasticsearch
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=cities
      - SQL_USER=jairo
      - SQL_PASSWORD=jairo
      - SQL_HOST=db-pro
      - SQL_PORT=5432
      - ES_HOSTS=http://elasticsearch-prod:9200
    command: [ "bash", "start.sh" ]
    ports:
      - 8000
    volumes:
      - ./server:/usr/src/app
      - static:/usr/src/app/static

  client:
    build:
      context: ./client
    command: [ "npm", "start" ]
    container_name: client-prod
    depends_on:
      - server
    ports:
      - 3000:3000
    volumes:
      - ./client:/usr/src/app

  reverse-proxy:
    build:
      context: ./reverse-proxy
    container_name: reverse-proxy
    depends_on:
      - server
      - client
    ports:
      - 8003:80
    restart: always
    volumes:
      - static:/usr/src/app/static

volumes:
  database-prod:
  elasticsearch-prod:
  static: